<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnAddNew.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="btnExit.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        rkJggg==
</value>
  </data>
</root>